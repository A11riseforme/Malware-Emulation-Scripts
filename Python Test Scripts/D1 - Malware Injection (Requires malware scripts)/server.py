#!/usr/bin/python3
import argparse

from http.server import HTTPServer, SimpleHTTPRequestHandler
import socketserver, threading
from socketserver import ThreadingMixIn

handler = SimpleHTTPRequestHandler

# HTTP server
class ThreadedHTTPServer(ThreadingMixIn, HTTPServer):
    """ This class allows to handle requests in separated threads.
    No further content needed, don't touch this. """

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="HTTP Server Emulation")
    parser.add_argument("-srvport", help = "listening port of the web server (Default: 80)", type=int, default=80, required = False)
    args = parser.parse_args()

    server = ThreadedHTTPServer(("0.0.0.0", args.srvport), handler)
    print("HTTP Web Server started. Press Ctrl+c to stop")
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\nExiting...")
        exit(1)
