#!/usr/bin/python3

# Source: https://blog.talosintelligence.com/2014/03/decoding-domain-generation-algorithms.html

from datetime import datetime
import hashlib
import socket

import time

HASHLEN = 16

def processDate(dateStr):
    try:
        date = int(dateStr)
    except ValueError:
        return None
    except TypeError:
        return None
    month = int(date / 10000  % 100)
    day = int((date / 1000000) // 7 * 7)
    year = int((date % 10000 + 0x30)) & 0xff
    dateData = [ year, month, day ]
    return dateData

def genDate():    
    time = datetime.now()
    year = (time.year + 0x30) & 0xff
    month = time.month
    day = time.day // 7 * 7
    dateData = [ year, month, day ]
    return dateData

def genMD5(pbData):
    md5 = hashlib.md5()
    for i in range(7):
        md5.update(chr(pbData[i]).encode('latin-1'))
    return md5.digest()

# Generate TLD based on low-byte of random seed
def genTLD(seed):
    lobyte = seed & 0xff
    if seed % 6 == 0:
        return ".ru"
    elif seed % 5 == 0:
        return ".biz"
    elif lobyte & 3 == 00:
        return ".info"
    elif seed % 3 == 0:
        return ".org"
    elif lobyte & 1 == 0:
        return ".net"
    else:
        return ".com"
        
def genURL(md5Hash):
    URL = ""
    for i in range(HASHLEN):
        cl = md5Hash[i]
        dl = cl
        dl = ((dl & 0x1F) + 0x61) & 0xFF
        cl = ((cl >> 3) + 0x61) & 0xFF
        if not cl == dl:
            if dl <= 0x7A:
                URL += chr(dl)
            if cl <= 0x7A:
                URL += chr(cl)
    return URL

def gen(number, date, prefix, suffix, tld):    
    dateData = [ 0 ] * 7
    if date: # Date supplied in DDMMYYYY
        dateData = processDate(date)
        if dateData is None:
            print("Date format error. Date must be in DDMMYYYY format.")
            exit(-1)
    else: # Uses system date
        dateData = genDate()
    
    domains = []
    for i in range(number):
        hibyte = (i >> 8) & 0xff
        lobyte = i & 0xff
        pbData = [ dateData[0], dateData[1], dateData[2], lobyte, hibyte, 0x00, 0x00 ]
        
        md5Hash = genMD5(pbData)
        
        url = genURL(md5Hash)
        url += suffix
        if tld: # Uses user-supplied TLD if provided
            url += tld
        else: # Uses generated TLD
            url += genTLD(i)
        domains.append(url)
    return domains
